import{_ as u}from"./index-B-bT5EYz.js";import{L as A,O as w,a as E,T as Z,c as O,d as F,f as j,g as D,b as S,i as x,l as N,o as W,r as V,s as $,t as H}from"./index-B-bT5EYz.js";const f={quickCheck:e=>/^#{1,6} /gm.test(e)||/\*\*/.test(e)||/```/.test(e)||/\[.*\]\(/.test(e)||/^\s*[-*+]\s/gm.test(e)||/---\n/.test(e)||/^\s*\|.*\|/gm.test(e),comprehensiveCheck:e=>{const t=(e.match(/^#{1,6} /gm)||[]).length,n=(e.match(/\*\*[^**]+\*\*/g)||[]).length,s=(e.match(/\*[^ *]+\*/g)||[]).length,i=(e.match(/```[\s\S]*?```/g)||[]).length,r=(e.match(/\[.*\]\(.*\)/g)||[]).length,a=(e.match(/^\s*[-*+]\s+[^:]+$/gm)||[]).length,o=(e.match(/^\s*\d+\.\s+/gm)||[]).length,c=a+o,h=(e.match(/^\s*\|.*\|/gm)||[]).length,m=(e.match(/^\s*\|[-\s:|]+\|/gm)||[]).length,l=h>2?2:h>1||h>0&&m>0?1:0;return t+n+s+i+r+c+l>1},quickConfidence:.6,compConfidence:.9,mimeType:"text/markdown",extension:"md",reasons:["Markdown syntax like headers, bold, code, links, or lists detected","Multiple Markdown elements confirmed"]},g={quickCheck:e=>e.trim().startsWith("<!DOCTYPE html>")||/<([a-z][a-z0-9]*)/i.test(e.slice(0,1e3)),comprehensiveCheck:e=>{const t=(e.match(/<([a-z][a-z0-9]*)/gi)||[]).length,n=(e.match(/<\/([a-z][a-z0-9]*)/gi)||[]).length;if(e.trim().startsWith("<?xml")||/xmlns[:=]/i.test(e)||[/^#{1,6} /gm,/\*\*[^*]+\*\*/g,/\[.*\]\(.*\)/g,/```/g,/^\s*[-*+]\s+/gm].reduce((o,c)=>o+(e.match(c)||[]).length,0)>1)return!1;const r=/class=|id=|href=|src=|style=|alt=|title=/i.test(e)||/<[^>]*\/>/i.test(e);return t===0||!r&&t<2?!1:Math.abs(t-n)<=Math.max(1,t*.5)},quickConfidence:.7,compConfidence:.95,mimeType:"text/html",extension:"html",reasons:["HTML doctype or opening tag detected in snippet","Balanced tags with HTML-specific attributes or self-closing elements (distinguishes from XML)"]},p={quickCheck:e=>{const t=e.trim();return/^\s*[\[\{]/.test(t)||/^\s*"/.test(t)||/^\s*-?\d+(\.\d+)?([eE][+-]?\d+)?\s*$/.test(t)||/^\s*(true|false|null)\s*$/.test(t)},comprehensiveCheck:e=>{try{return JSON.parse(e),!0}catch{return!1}},quickConfidence:.5,compConfidence:1,mimeType:"application/json",extension:"json",reasons:["Content starts with JSON array or object bracket","Full content parses as valid JSON"]},k={quickCheck:e=>{const t=e.trim();return t.startsWith("<?xml")?!0:/<(html|body|div|p|span|img|br|meta|head|title)/i.test(t)?!1:/<([a-zA-Z_:][a-zA-Z0-9_.:-]*)(\s+[^>]*xmlns[^>]*)?>/.test(e.slice(0,100))||/<[^>]+xmlns:/.test(e.slice(0,100))||/<[^>]*\/>/.test(e.slice(0,100))&&/<[^>]*xmlns/.test(e)},comprehensiveCheck:e=>{const t=(e.match(/<([a-zA-Z_:][a-zA-Z0-9_.:-]*)/g)||[]).length,n=(e.match(/<\/([a-zA-Z_:][a-zA-Z0-9_.:-]*)/g)||[]).length,s=/<([a-zA-Z_:][a-zA-Z0-9_.:-]*)([^>]*)>/.test(e);return/<(html|body|div|p)/i.test(e)?!1:t>1&&Math.abs(t-n)<2&&s},quickConfidence:.6,compConfidence:.9,mimeType:"application/xml",extension:"xml",reasons:["XML declaration or namespace-tagged element detected (excluding HTML)","Well-formed XML structure with root element (non-HTML)"]},C={quickCheck:e=>e.includes(","),comprehensiveCheck:e=>{const t=e.split(`
`).filter(s=>s.trim());return t.length<2?!1:t.filter(s=>s.includes(",")).length/t.length>.8},quickConfidence:.4,compConfidence:.8,mimeType:"text/csv",extension:"csv",reasons:["Comma delimiter present","Majority of lines contain commas indicating CSV structure"]},M={quickCheck:e=>{const t=e.trim();if(t.startsWith("---"))return!0;if(t.startsWith("{")&&/[a-zA-Z_$][a-zA-Z0-9_$]*\s*:/.test(e))return!1;const n=(e.match(/:\s/g)||[]).length,s=(e.match(/^\s*-\s/gm)||[]).length;return n>0||s>0},comprehensiveCheck:e=>{if(e.trim().startsWith("{")&&/[a-zA-Z_$][a-zA-Z0-9_$]*\s*:/.test(e))return!1;if(e.trim().startsWith("---")&&e.includes("---",3)){const i=e.indexOf("---",3);if((e.slice(3,i).match(/^\s*[^:]+:\s+/gm)||[]).length>0)return!0}const t=(e.match(/^\s*[^:]+:\s+/gm)||[]).length,n=(e.match(/^\s*-\s+/gm)||[]).length,s=/:\s*\n\s+[^\s]/.test(e);return t>1||n>1&&s},quickConfidence:.5,compConfidence:.85,mimeType:"text/yaml",extension:"yaml",reasons:["YAML key-value pair or list item detected","Multiple structured YAML elements with indentation confirmed"]},y={quickCheck:()=>!0,comprehensiveCheck:()=>!0,quickConfidence:.1,compConfidence:.1,mimeType:"text/plain",extension:"txt",reasons:["Default plain text fallback - no specific format markers detected"]},v={quickCheck:e=>e.includes("\\documentclass")||/\\([a-zA-Z]+){/.test(e)||/\\begin\{/.test(e),comprehensiveCheck:e=>{const t=(e.match(/\\([a-zA-Z]+)/g)||[]).length,n=(e.match(/\\begin\{[^}]+\}/g)||[]).length+(e.match(/\\end\{[^}]+\}/g)||[]).length,s=/\\documentclass/.test(e),i=/\\begin\{document\}/.test(e)&&/\\end\{document\}/.test(e);return s&&i?!0:t>3&&n>0},quickConfidence:.7,compConfidence:.95,mimeType:"text/x-tex",extension:"tex",reasons:["LaTeX command or environment detected","Multiple LaTeX commands and environments found"]},T=["md","html","json","xml","csv","yaml","txt","tex"],q=async({content:e,filePath:t,formats:n=[]})=>{if(e===void 0&&t===void 0)throw new Error("Either `content` or `filePath` is required");if(e=e||"",t=t||"",t&&!e){if(!(typeof process<"u"&&!!process.versions?.node))throw new Error("Reading from filePath is only supported in Node.js environments.");e=await(await u(()=>import("./__vite-browser-external-BIHI7g3E.js"),[])).readFile(t,"utf8")}const s=n.length?n:T,i=e.slice(0,2e3),r={md:f,html:g,json:p,xml:k,csv:C,yaml:M,txt:y,tex:v};let a={format:"txt",mimeType:"text/plain",extension:"txt",confidence:.1,reasons:["Defaulted to plain text format - low confidence level for all other formats"]};for(const o of s){const c=r[o];if(!c||!c.quickCheck(i))continue;let m,l;if(c.comprehensiveCheck){const d=o==="json"?e:i;if(!c.comprehensiveCheck(d))continue;m=c.compConfidence,l=c.reasons}else m=c.quickConfidence,l=c.reasons;m>(a.confidence||0)&&(a={format:o,mimeType:c.mimeType,extension:c.extension,confidence:m,reasons:l})}return a};export{A as Log,w as ORIGINAL_CONSOLE_METHODS,E as OptionsManager,Z as Turnstile,O as convertBytesToUnit,q as detectFormatFromText,F as formatDate,j as formatFileSize,D as getFileExtension,S as isValidEmail,x as isValidFilename,N as log,W as optionsManager,V as removeFileExtension,$ as sanitizeFilename,H as turnstile};
//# sourceMappingURL=index-CMnn9qFl.js.map
